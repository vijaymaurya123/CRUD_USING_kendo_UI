@using Kendo.Mvc.UI
@using te.ViewModels
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Kendoui/kendo.all.min.js"></script>
<link href="~/Kendoui/kendo.common.min.css" rel="stylesheet" />
@(

        Html.Kendo().Grid<Usermodel>().Name("grid").Columns(columns =>
        {

            columns.Bound(expression: c => c.userid).Width(50).Title(text:"#");
            columns.Bound(expression: c => c.email).Width(100).Title(text:"Email Id");
            columns.Bound(expression: c => c.mobile).Width(100).Title(text:"Mobile NO");
            columns.Bound(expression: c => c.password).Width(100).Title(text:"Password");
            columns.Bound(expression: c => c.dob).Width(150).Title(text:"DateOfBirth");
            columns.Command(command => command.Custom("Edit").Click("editDetails")).Title("Modify").Width(30);
            columns.Command(c => { c.Destroy(); }).Title("Remove").Width(30);

        }).HtmlAttributes(new {styles="hight: 550px"})
        .Sortable()
        .Groupable()

        .Pageable()
        .DataSource(DataSource=>DataSource
        .Ajax()
        .Model(model => model.Id(expression: p => p.userid))
        .Read(read=>read.Action("GetUser","Home"))
        .Destroy(destroy => destroy.Action("DeleteEmployee", "Home"))

        .PageSize(10)
        )
         .ToolBar(toolbar =>
         {
             toolbar.Custom().Name("newAdd").Text("+ Add Employee ").Url("#").HtmlAttributes(new { id = "newAdd" });

         })

         .Pageable(pageable =>
         {
             pageable.Refresh(true);
             pageable.PageSizes(true);
         })


    )

<div class="col-md-12">
    @(Html.Kendo().Window().Name("AddDetails")
        .Title("Add Employee")
        .Visible(false)
        .Modal(true)
        .Content(@<text>
            <div style="width:100%;" id="fieldlist">

                <form id="Addform">
                    <div id="save-container">
                        <div class="col-md-12">
                            <div class="col-md-6">
                                @Html.Label("Email :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().TextBox()
                             .Name("txtEmail")
                             .HtmlAttributes(new { placeholder = "Enter Email", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%", })
                                )
                            </div>
                            <div class="col-md-6">
                                @Html.Label("Mobile :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().TextBox()
                             .Name("txtMobile")
                             .HtmlAttributes(new { placeholder = "Enter Mobile", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                             <div class="col-md-6">
                                  @Html.Label("Password :", htmlAttributes: new { @class = "control-label" })
                                @(Html.Kendo().TextBox()
                             .Name("txtPassword")
                             .HtmlAttributes(new { placeholder = "Enter Password", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                             <div class="col-md-6">
                                  @Html.Label("DoB :", htmlAttributes: new { @class = "control-label" })
                                @(Html.Kendo().DatePicker()
                             .Name("txtDOB")
                             .HtmlAttributes(new { placeholder = "Enter DOB", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                        </div>
                        
                        <div class="col-md-12">
                          
                            <div class="col-md-6">

                            </div>



                          <div class="row" style="text-align:center;margin-top:10px;left:20px;">
                            @(Html.Kendo().Button()
                               .Name("btnSave")
                               .Content("Save")
                               .HtmlAttributes(new { type = "button", @class = "k-button k-primary", style = "height:35px;width:70px;" })
                               .Events(e => e.Click("btnSave_Click"))
                            )
                              @(Html.Kendo().Button()
                                 .Name("btnReset")
                                 .Content("Reset")
                                 .HtmlAttributes(new { type = "button", @class = "k-button k-primary", style = "height:35px;width:70px;" })
                                 .Events(e => e.Click("btnReset_Click"))
                            )
                          </div>

                        </div>
                    </div>

                </form>

            </div>
        </text>)
                .Draggable(true) //Enable dragging of the window
                .Actions(actions => actions.Pin().Minimize().Maximize().Close()).Resizable() //Enable resizing of the window
                .Width(980)     //Set width of the window
                .Height(300)

    )


</div>



<div class="col-md-12">
    @(Html.Kendo().Window().Name("EditDetails")
        .Title("Edit Employee")
        .Visible(false)
        .Modal(true)
        .Content(@<text>
            <div style="width:100%;" id="fieldlist">

                <form id="Editform">
                    <div id="Update-container">
                        <div class="col-md-12">
                            @Html.Hidden("txtuserid")
                            <div class="col-md-6">
                                @Html.Label("Email :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().TextBox()
                             .Name("txtemail")
                             .HtmlAttributes(new { placeholder = "Enter Email", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%", })
                                )
                            </div>
                            <div class="col-md-6">
                                @Html.Label("Mobile :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().TextBox()
                             .Name("txtmobile")
                             .HtmlAttributes(new { placeholder = "Enter Mobile", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                             <div class="col-md-6">
                                @Html.Label("Password :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().TextBox()
                             .Name("txtpassword")
                             .HtmlAttributes(new { placeholder = "Enter Password", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                             <div class="col-md-6">
                                @Html.Label("DOB :", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @(Html.Kendo().DatePicker()
                             .Name("txtdob")
                             .HtmlAttributes(new { placeholder = "Enter DOB", required = "required", validationmessage = "*", maxlength = "50", @class = "col-sm-2 form-control", style = "width: 100%" })
                                )
                            </div>
                        </div>
                        <div class="clarfix" style="height:35px"></div>
                        <div class="col-md-12">                       

                            <div class="row" style="margin-top:20px"></div>
                            <div class="row" style="text-align:center;margin-top:10px;left:20px;">
                                 @(Html.Kendo().Button()
                                    .Name("btnUpdate")
                                    .Content("Update")
                                    .HtmlAttributes(new { type = "button", @class = "k-button k-primary", style = "height:35px;width:70px;" })
                                    .Events(e => e.Click("btnUpdate_Click"))
                                )
                                @(Html.Kendo().Button()
                                      .Name("btnUpdateReset")
                                      .Content("Reset")
                                      .HtmlAttributes(new { type = "button", @class = "k-button k-primary", style = "height:35px;width:70px;" })
                                      .Events(e => e.Click("btnUpdateReset_Click"))
                                )
                            </div>

                        </div>
                    </div>

                </form>

            </div>
        </text>)
                                            // .Draggable(true) //Enable dragging of the window
                                             .Actions(actions => actions.Pin().Minimize().Maximize().Close()).Resizable() //Enable resizing of the window
                                             .Width(500)     //Set width of the window
                                             .Height(400)

    )


</div>




<script>
    $("#newAdd").click(function (e) {
        debugger
        e.preventDefault();
        $("#AddDetails").data("kendoWindow").center().open();
        $("#newAdd").show();
        $("#btnSave").kendoButton({}).data("kendoButton").enable(true);

    });

    function btnSave_Click() {
        debugger
        var validator = $("#save-container").kendoValidator().data("kendoValidator");
        if (validator.validate()) {

            var employeeModel = {
                email: $('#txtEmail').val(),
                mobile: $('#txtMobile').val(),
                password: $('#txtPassword').val(),
                dob: $('#txtDOB').val(),


            }
            var model = {
                "emp": employeeModel
            }
            $.ajax({
                type: "POST",
                url: '/Home/AddEmployee', data: model,
                datatype: "json",
                cache: false,
                success: function (data) {

                },

            });
            btnReset_Click();
            var wnd = $("#AddDetails").data("kendoWindow");
            wnd.center().close();
            alert("Record save is successfully!");
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.read();
            return true;
        }
        else {
            return false;
        }
    }



    function editDetails(e) {
        debugger
        e.preventDefault();
        var wnd = $("#EditDetails").data("kendoWindow");
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#txtuserid").val(dataItem.userid);
        $("#txtemail").val(dataItem.email);
        $('#txtmobile').val(dataItem.mobile);

        $("#txtpassword").val(dataItem.password)
        $("#txtdob").val(dataItem.dob)


        $("#btnUpdate").kendoButton({}).data("kendoButton").enable(true);
        wnd.center().open();
    }

    function btnReset_Click() {
        debugger
        $("#txtEmail").val('');

        $("#txtMobile").val("");
        $('#txtPassword').val("");
        $("#txtDOB").val("");

        $("#btnSave").kendoButton({}).data("kendoButton").enable(true);
        var wnd = $("#AddDetails").data("kendoWindow");
        wnd.element.find("span.k-tooltip-validation").hide();
        return;
    }
    function btnUpdateReset_Click() {
        debugger

        var Id = $("#txtuserid").val();
        var dataItem = $("#grid").data("kendoGrid").dataSource.get(Id);
        $("#ddlemail").val(dataItem.email)
        $("#txtmobile").val(dataItem.mobile)
        $("#txtpassword").val(dataItem.password)
        $("#txtdob").val(dataItem.dob)

        $("#btnUpdate").kendoButton({}).data("kendoButton").enable(true);
        return;
    }

    function btnUpdate_Click() {
        debugger
        var validator = $("#Update-container").kendoValidator().data("kendoValidator");
        if (validator.validate()) {

            var employeeModel = {
                userid: $("#txtuserid").val(),
                email: $('#txtemail').val(),
                mobile: $('#txtmobile').val(),
                password: $('#txtpassword').val(),
                dob: $('#txtdob').val(),


            }
            var model = {
                "emp": employeeModel
            }
            $.ajax({
                type: "POST",
                url: '/Home/UpdateEmployee', data: model,
                datatype: "json",
                cache: false,
                success: function (data) {

                },

            });
            btnReset_Click();
            var wnd = $("#EditDetails").data("kendoWindow");
            wnd.center().close();
            alert("Record updated successfully!");
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.read();
            return true;
        }
        else {
            return false;
        }
    }


</script>